<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ge.vakho</groupId>
	<artifactId>openjfx-fxml-maven-example</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<name>${project.artifactId}</name>
	<description>Example Maven project building OpenJFX FXML project using JLink.</description>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>14</maven.compiler.source>
		<maven.compiler.target>14</maven.compiler.target>
		<javafx.version>14</javafx.version>
		
		<main-class>ge.vakho.openjfx_fxml_maven_example.App</main-class>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>${maven.compiler.target}</release>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.4</version>
				<executions>
					<execution>
						<goals>
							<goal>jlink</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<!-- Prints additional information to console -->
					<stripDebug>true</stripDebug>
					<jlinkVerbose>true</jlinkVerbose>

					<!-- Removes the includes directory in the resulting runtime image -->
					<noHeaderFiles>true</noHeaderFiles>

					<!-- Removes the man directory in the resulting runtime image -->
					<noManPages>true</noManPages>

					<!-- Adds a launcher script with the given name -->
					<launcher>${project.name}-launcher</launcher>

					<!-- The name of the folder with the resulting runtime image -->
					<jlinkImageName>${project.name}</jlinkImageName>

					<!-- When set, creates a zip of the resulting runtime image with specified 
						compression level -->
					<jlinkZipName>${project.name}-zip</jlinkZipName>
					<compress>2</compress>

					<mainClass>${main-class}</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>